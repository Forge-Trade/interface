name: Test

on:
  push:
    branches:
      - main
  pull_request:
  # manual trigger
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - run: yarn lint

  deps-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - run: yarn yarn-deduplicate --strategy=highest --list --fail

  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - run: yarn prepare
      - run: yarn test
      - uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: false
          verbose: true

  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - run: yarn prepare
      - run: 'yarn build:node18'
      - uses: actions/upload-artifact@v2
        with:
          name: build
          path: build
          if-no-files-found: error

  size-tests:
    needs: [build]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      - run: yarn test:size


  cypress-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/actions/setup
      - uses: actions/cache@v3
        id: cypress-cache
        with:
          path: /home/runner/.cache/Cypress
          key: ${{ runner.os }}-cypress-${{ hashFiles('node_modules/cypress') }}
      - if: steps.cypress-cache.outputs.cache-hit != 'true'
        run: yarn cypress install
